发射概率只和当前状态有关，是较简单的模型。
当遇到语料库中没有的word就返回平均概率
概率和为1，到后面乘积越来越小，然后变成0，之后就都是0了，就全部都是S
准确率0.65
------------------------------
先将语句用逗号分开，所有逗号都是S，这样可以减小长度，避免因长度过大而产生的概率消失。
同时，Pi_dic[key]和A['S'][key]应该是差不多的，key='S' or 'B'的概率和等于1，因为都不可能为'I' or 'E'，所以把逗号后面的那个字当做一个句子的开头来预测应该也差不多
准确率0.75
------------------------------
当遇到语料库中没有的word返回当前状态发射概率的最小值
准确率0.78
------------------------------
HMM2的发射概率和当前状态以及下一个状态有关，建模能力应该更强，但是……
准确率：0.76
------------------------------
HMM的viterbi_sum把乘法改成加法以解决梯度消失
准确率：0.39
原因应该在于概率没有化成对数，相对大小会发生变化
------------------------------
HMM.py加了对数处理
准确率只有0.5